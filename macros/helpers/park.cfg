[gcode_macro PARK]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
gcode:
    STEP_ASIDE_SON

[gcode_macro STEP_ASIDE_SON]
description: park toolhead 
gcode:
    {% set min = printer.toolhead.axis_minimum %}
    {% set max = printer.toolhead.axis_maximum %}
    {% set act = printer.gcode_move.gcode_position %}

    {% set x_park = (max.x / 2.0) - act.x %}
    {% set y_park = (max.y - 0.5) - act.y %}
    {% set z_park = [[act.z + 6.66, max.z * 0.62]|max, max.z]|min %}

    _BASE_PARK X={x_park} Y={y_park} Z={z_park} 

[gcode_macro MOVE_TO_PURGE]
description: Move over the purge bucket
gcode:
    {% set min = printer.toolhead.axis_minimum %}
    {% set max = printer.toolhead.axis_maximum %}
    {% set act = printer.gcode_move.gcode_position %}

    {% set svv = printer.save_variables.variables %}

    {% set x_park = min.x - act.x %}
    {% set y_park = (max.y / 2) - act.y %}
    {% set z_park = 6.66 - act.z %}
    
    {% if params.Z_DROP|default(1) %}
        _BASE_PARK X={x_park} Y={y_park} Z={z_park} {rawparams}
    {% else %}
        _BASE_PARK X={x_park} Y={y_park} {rawparams}
    {% endif %}

[gcode_macro SMART_PARK]
description: Parks your printhead near the print area for pre-print hotend heating.
gcode:
    {% set vars = printer.save_variables.variables %}

                                                                    # Pull all variables from _KAMP_Settings
    {% set z_height     = vars.z_height     | float %}                                                                    # Set Z height variable
    {% set purge_margin = vars.purge_margin | float %}                                                                     # Set purge margin variable

    {% set center_x = printer.toolhead.axis_maximum.x / 2 | float %}                                                                # Create center point of x for fallback
    {% set center_y = printer.toolhead.axis_maximum.y / 2 | float %}                                                                # Create center point of y for fallback
    {% set axis_minimum_x = printer.toolhead.axis_minimum.x | float %}
    {% set axis_minimum_y = printer.toolhead.axis_minimum.y | float %}

    {% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}                                # Gather all object points
    {% set x_min = all_points | map(attribute=0) | min | default(center_x) %}                                                       # Set x_min from smallest object x point
    {% set y_min = all_points | map(attribute=1) | min | default(center_y) %}                                                       # Set y_min from smallest object y point
    {% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}                                                           # Set travel speed from config

    {% if purge_margin > 0 and x_min != center_x and y_min != center_y %}                                                           # If objects are detected and purge margin 
        {% set x_min = [ x_min - purge_margin , x_min ] | min %}                                                                    # value is greater than 0, move
        {% set y_min = [ y_min - purge_margin , y_min ] | min %}                                                                    # to purge location + margin
        {% set x_min = [ x_min , axis_minimum_x ] | max %}
        {% set y_min = [ y_min , axis_minimum_y ] | max %}
    {% endif %}

    RESPOND MSG="Smart Park location\t{x_min}x{y_min}"

    {% set act = printer.gcode_move.gcode_position %}

    _BASE_PARK X={x_min-act.x} Y={y_min-act.y} Z={z_height-act.z}



[gcode_macro _BASE_PARK]
description: park toolhead with relative coordinat
gcode:
    {% set velocity_travel = params.TRAVEL|default(printer.configfile.settings.printer.max_velocity)  |int * 60 %}
    {% set velocity_hop    = params.HOP   |default(printer.configfile.settings.printer.max_z_velocity)|int * 60 %}

    {% if "xyz" not in printer.toolhead.homed_axes %}
        RESPOND TYPE=ERROR MSG="Printer not homed"
    {% else %}
        RETRACT WIPE=1
        SAVE_GCODE_STATE NAME=PARK_STATE
        {% set x_park = params.X|default(0)|float|round(3) %}
        {% set y_park = params.Y|default(0)|float|round(3) %}
        {% set z_park = params.Z|default(0)|float|round(3) %}
        G91 ; relative
        G0 X{x_park} Y{y_park} Z{z_park} F{velocity_hop}
        G90 ; absolute
        RESTORE_GCODE_STATE NAME=PARK_STATE MOVE=0
    {% endif %}


    